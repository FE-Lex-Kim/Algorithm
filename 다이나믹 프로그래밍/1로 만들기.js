// 문제유형: 다이나믹 프로그래밍
// 정수 X가 주어졌을때, 정수 X에 사용할 수 있는 연산은 4가지이다.
// 1. X가 5로 나누어 떨어지면, 5로 나눈다
// 2. X가 3으로 나누어 떨어지면, 3으로 나눈다
// 3. X가 2로 나누어 떨어지면, 2로 나눈다
// 4. X에서 1을 뺀다.

// 정수 X가 주어졌을때, 연산 4개를 적절히 사용해서 1로 만들어야한다.
// 연산을 사용하는 횟수의 최솟값을 출력해야한다.

// 예를들어 정수가 26이면 3번의 연산이 최솟값이다.
// 26 -> 25 -> 5 -> 1

// 첫째 줄에 정수 X가 주어진다(1 <= X <= 30000)

const calculateOne = (str) => {
  for (let line of str.split("\n")) {
    let x = +line;
    // 5의 배수인지 확인

    let dp = Array.from({ length: 30001 }, () => 0);

    dp[1] = 0;
    for (let i = 2; i < x + 1; i++) {
      // 1을 빼준경우
      dp[i] = dp[i - 1] + 1;

      // 2로 나눈경우
      if (i % 2 === 0) {
        dp[i] = Math.min(dp[i], dp[i / 2] + 1);
      }

      // 3으로 나눈경우
      if (i % 3 === 0) {
        dp[i] = Math.min(dp[i], dp[i / 3] + 1);
      }

      // 5로 나눈경우
      if (i % 5 === 0) {
        dp[i] = Math.min(dp[i], dp[i / 5] + 1);
      }
    }
    console.log(dp[x]);
  }
};

calculateOne("26"); // 3
